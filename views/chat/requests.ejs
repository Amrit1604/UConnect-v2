<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Requests | UConnect</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
    <style>
        /* üî• HULK-POWERED CHAT REQUESTS STYLES üî• */
        .requests-container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .requests-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .requests-header h1 {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2.5rem;
            font-weight: 900;
            margin-bottom: 0.5rem;
        }

        .requests-header p {
            color: #64748b;
            font-size: 1.1rem;
        }

        .requests-tabs {
            display: flex;
            background: #f8fafc;
            border-radius: 12px;
            padding: 0.5rem;
            margin-bottom: 2rem;
            gap: 0.5rem;
        }

        .tab-button {
            flex: 1;
            padding: 0.75rem 1rem;
            border: none;
            background: transparent;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            color: #64748b;
        }

        .tab-button.active {
            background: white;
            color: #667eea;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .requests-list {
            display: none;
        }

        .requests-list.active {
            display: block;
        }

        .request-card {
            background: white;
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            box-shadow: 0 2px 12px rgba(0,0,0,0.08);
            border: 1px solid #e2e8f0;
            transition: all 0.3s ease;
        }

        .request-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0,0,0,0.12);
        }

        .request-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #667eea;
        }

        .user-info h3 {
            margin: 0;
            font-size: 1.2rem;
            font-weight: 700;
            color: #1e293b;
        }

        .user-info p {
            margin: 0;
            color: #64748b;
            font-size: 0.9rem;
        }

        .request-status {
            margin-left: auto;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .status-pending {
            background: #fef3c7;
            color: #92400e;
        }

        .status-accepted {
            background: #d1fae5;
            color: #065f46;
        }

        .status-rejected {
            background: #fee2e2;
            color: #991b1b;
        }

        .status-expired {
            background: #f1f5f9;
            color: #475569;
        }

        .request-message {
            background: #f8fafc;
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1rem;
            font-style: italic;
            color: #475569;
        }

        .request-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
        }

        .btn {
            padding: 0.5rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-accept {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
        }

        .btn-accept:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
        }

        .btn-reject {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
        }

        .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
        }

        .btn-enter {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .btn-enter:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: #f1f5f9;
            color: #475569;
        }

        .btn-secondary:hover {
            background: #e2e8f0;
        }

        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            color: #64748b;
        }

        .empty-state h3 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: #475569;
        }

        .empty-state p {
            font-size: 1rem;
            margin-bottom: 1.5rem;
        }

        .time-info {
            font-size: 0.8rem;
            color: #64748b;
            margin-top: 0.5rem;
        }

        .room-expired-warning {
            background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
            border: 1px solid #fca5a5;
            padding: 1rem;
            border-radius: 12px;
            margin-top: 1rem;
            color: #991b1b;
            font-weight: 500;
        }

        @media (max-width: 768px) {
            .requests-container {
                margin: 1rem auto;
                padding: 0 0.5rem;
            }

            .request-card {
                padding: 1rem;
            }

            .request-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .request-status {
                margin-left: 0;
                align-self: flex-start;
            }

            .request-actions {
                flex-direction: column;
                gap: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %>

    <div class="requests-container">
        <div class="requests-header">
            <h1>üîê Secret Chat Requests</h1>
            <p>Manage your private messaging requests with other students</p>
        </div>

        <!-- Requests Tabs -->
        <div class="requests-tabs">
            <button class="tab-button active" onclick="showTab('received')">
                üì• Received (<%= receivedRequests.length %>)
            </button>
            <button class="tab-button" onclick="showTab('sent')">
                üì§ Sent (<%= sentRequests.length %>)
            </button>
            <button class="tab-button" onclick="showTab('active')">
                üí¨ Active Chats (<%= activeChats.length %>)
            </button>
        </div>

        <!-- Received Requests -->
        <div id="received-tab" class="requests-list active">
            <% if (receivedRequests.length === 0) { %>
                <div class="empty-state">
                    <h3>üì≠ No Requests Yet</h3>
                    <p>You haven't received any secret chat requests.</p>
                    <a href="/posts" class="btn btn-secondary">Browse Posts</a>
                </div>
            <% } else { %>
                <% receivedRequests.forEach(request => { %>
                    <div class="request-card">
                        <div class="request-header">
                            <img src="<%= request.requester.avatarUrl %>" alt="<%= request.requester.name %>" class="user-avatar">
                            <div class="user-info">
                                <h3><%= request.requester.name %></h3>
                                <p>@<%= request.requester.username %> ‚Ä¢ <%= request.requester.campus %></p>
                            </div>
                            <span class="request-status status-<%= request.status %>">
                                <%= request.status.toUpperCase() %>
                            </span>
                        </div>

                        <div class="request-message">
                            "<%= request.message %>"
                        </div>

                        <div class="time-info">
                            Requested <%= request.formattedTime %> ‚Ä¢ From post: "<%= request.postTitle %>"
                        </div>

                        <% if (request.status === 'pending') { %>
                            <div class="request-actions">
                                <button class="btn btn-reject" onclick="respondToRequest('<%= request._id %>', 'reject')">
                                    ‚ùå Reject
                                </button>
                                <button class="btn btn-accept" onclick="respondToRequest('<%= request._id %>', 'accept')">
                                    ‚úÖ Accept Chat
                                </button>
                            </div>
                        <% } else if (request.status === 'accepted' && request.roomId && !request.isRoomExpired) { %>
                            <div class="request-actions">
                                <a href="/chat/room/<%= request.roomId %>" class="btn btn-enter">
                                    üöÄ Enter Private Room
                                </a>
                            </div>
                        <% } else if (request.status === 'accepted' && request.isRoomExpired) { %>
                            <div class="room-expired-warning">
                                ‚è∞ This chat room has expired and is no longer accessible.
                            </div>
                        <% } %>
                    </div>
                <% }); %>
            <% } %>
        </div>

        <!-- Sent Requests -->
        <div id="sent-tab" class="requests-list">
            <% if (sentRequests.length === 0) { %>
                <div class="empty-state">
                    <h3>üì§ No Sent Requests</h3>
                    <p>You haven't sent any secret chat requests yet.</p>
                    <a href="/posts" class="btn btn-secondary">Browse Posts</a>
                </div>
            <% } else { %>
                <% sentRequests.forEach(request => { %>
                    <div class="request-card">
                        <div class="request-header">
                            <img src="<%= request.recipient.avatarUrl %>" alt="<%= request.recipient.name %>" class="user-avatar">
                            <div class="user-info">
                                <h3><%= request.recipient.name %></h3>
                                <p>@<%= request.recipient.username %> ‚Ä¢ <%= request.recipient.campus %></p>
                            </div>
                            <span class="request-status status-<%= request.status %>">
                                <%= request.status.toUpperCase() %>
                            </span>
                        </div>

                        <div class="request-message">
                            "<%= request.message %>"
                        </div>

                        <div class="time-info">
                            Sent <%= request.formattedTime %> ‚Ä¢ From post: "<%= request.postTitle %>"
                        </div>

                        <% if (request.status === 'accepted' && request.roomId && !request.isRoomExpired) { %>
                            <div class="request-actions">
                                <a href="/chat/room/<%= request.roomId %>" class="btn btn-enter">
                                    üöÄ Enter Private Room
                                </a>
                            </div>
                        <% } else if (request.status === 'accepted' && request.isRoomExpired) { %>
                            <div class="room-expired-warning">
                                ‚è∞ This chat room has expired and is no longer accessible.
                            </div>
                        <% } %>
                    </div>
                <% }); %>
            <% } %>
        </div>

        <!-- Active Chats -->
        <div id="active-tab" class="requests-list">
            <% if (activeChats.length === 0) { %>
                <div class="empty-state">
                    <h3>üí¨ No Active Chats</h3>
                    <p>You don't have any active private chat rooms.</p>
                    <a href="/posts" class="btn btn-secondary">Browse Posts</a>
                </div>
            <% } else { %>
                <% activeChats.forEach(request => { %>
                    <div class="request-card">
                        <div class="request-header">
                            <img src="<%= request.otherUser.avatarUrl %>" alt="<%= request.otherUser.name %>" class="user-avatar">
                            <div class="user-info">
                                <h3><%= request.otherUser.name %></h3>
                                <p>@<%= request.otherUser.username %> ‚Ä¢ Active Chat Room</p>
                            </div>
                            <span class="request-status status-accepted">ACTIVE</span>
                        </div>

                        <div class="time-info">
                            Room expires <%= request.roomExpiryFormatted %> ‚Ä¢ Last activity: <%= request.lastActivityFormatted %>
                        </div>

                        <div class="request-actions">
                            <a href="/chat/room/<%= request.roomId %>" class="btn btn-enter">
                                üí¨ Continue Chat
                            </a>
                        </div>
                    </div>
                <% }); %>
            <% } %>
        </div>
    </div>

    <script>
        // üî• HULK-POWERED CHAT REQUESTS INTERFACE üî•

        function showTab(tabName) {
            // Hide all tabs
            document.querySelectorAll('.requests-list').forEach(tab => {
                tab.classList.remove('active');
            });

            // Remove active class from all buttons
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });

            // Show selected tab
            document.getElementById(tabName + '-tab').classList.add('active');

            // Add active class to clicked button
            event.target.classList.add('active');
        }

        async function respondToRequest(requestId, response) {
            try {
                const button = event.target;
                const originalText = button.innerHTML;
                button.disabled = true;
                button.innerHTML = '‚è≥ Processing...';

                const res = await fetch('/chat/request/respond', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        requestId: requestId,
                        response: response
                    })
                });

                const data = await res.json();

                if (data.success) {
                    // Show success message
                    if (response === 'accept') {
                        alert('üéâ Chat request accepted! A private room has been created. You can now start chatting!');
                    } else {
                        alert('‚ùå Chat request rejected.');
                    }

                    // Reload page to update UI
                    window.location.reload();
                } else {
                    alert('‚ùå Error: ' + data.message);
                    button.disabled = false;
                    button.innerHTML = originalText;
                }
            } catch (error) {
                console.error('Error responding to request:', error);
                alert('‚ùå Something went wrong. Please try again.');
                button.disabled = false;
                button.innerHTML = originalText;
            }
        }

        // Real-time updates via Socket.IO
        const socket = io();

        socket.on('newChatRequest', function(data) {
            if (data.recipientId === '<%= user._id %>') {
                // Show notification
                showNotification('üí¨ New secret chat request from ' + data.requesterName);

                // Update received requests count
                setTimeout(() => {
                    window.location.reload();
                }, 2000);
            }
        });

        socket.on('chatRequestResponse', function(data) {
            if (data.requesterId === '<%= user._id %>') {
                if (data.response === 'accepted') {
                    showNotification('üéâ ' + data.recipientName + ' accepted your chat request!');
                } else {
                    showNotification('‚ùå ' + data.recipientName + ' rejected your chat request.');
                }

                // Update UI
                setTimeout(() => {
                    window.location.reload();
                }, 2000);
            }
        });

        function showNotification(message) {
            // Simple notification (can be enhanced with a proper notification system)
            if (Notification.permission === 'granted') {
                new Notification('UConnect Secret Chat', {
                    body: message,
                    icon: '/images/logo.png'
                });
            } else {
                alert(message);
            }
        }

        // Request notification permission
        if (Notification.permission === 'default') {
            Notification.requestPermission();
        }

        console.log('üî• HULK CHAT: Requests interface initialized successfully!');
    </script>
</body>
</html>
