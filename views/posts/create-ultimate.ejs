<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | UConnect</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
</head>
<body style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); font-family: 'Inter', sans-serif; margin: 0; padding: 0; min-height: 100vh;">

    <%- include('../partials/navbar') %>
    <%- include('../partials/flash-messages') %>

    <!-- üî• CRAZY INSTAGRAM-LIKE CREATE INTERFACE üî• -->
    <div style="min-height: 100vh; padding-top: 5rem; display: flex; align-items: center; justify-content: center; padding: 5rem 1rem 2rem 1rem;">
        <div style="background: white; border-radius: 20px; box-shadow: 0 25px 60px rgba(0,0,0,0.15); max-width: 650px; width: 100%; overflow: hidden; position: relative;">

            <!-- EPIC HEADER WITH GRADIENT -->
            <div style="background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 50%, #fd79a8 100%); padding: 2.5rem 2rem; text-align: center; position: relative; overflow: hidden;">
                <div style="position: absolute; top: -50%; left: -50%; width: 200%; height: 200%; background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"50\" cy=\"50\" r=\"0.5\" fill=\"white\" opacity=\"0.1\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>'); animation: float 20s ease-in-out infinite;"></div>
                <h1 style="font-size: 2.5rem; font-weight: 900; color: white; margin: 0 0 0.5rem 0; text-shadow: 0 2px 4px rgba(0,0,0,0.3); position: relative; z-index: 1;">
                    ‚ú® Create Epic Post ‚ú®
                </h1>
                <p style="color: rgba(255,255,255,0.9); margin: 0; font-size: 1.1rem; font-weight: 500; position: relative; z-index: 1;">Share something amazing with your campus!</p>
                <div style="position: absolute; bottom: -10px; left: 50%; transform: translateX(-50%); width: 0; height: 0; border-left: 15px solid transparent; border-right: 15px solid transparent; border-top: 15px solid #fd79a8;"></div>
            </div>

            <!-- FORM WITH CRAZY ANIMATIONS -->
            <form action="/posts/create" method="POST" enctype="multipart/form-data" style="padding: 2.5rem;" onsubmit="return handleSubmit(event)">

                <!-- CONTENT SECTION WITH GLOW EFFECT -->
                <div style="margin-bottom: 2rem; position: relative;">
                    <label style="display: block; font-weight: 700; color: #2d3748; margin-bottom: 1rem; font-size: 1.1rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span style="font-size: 1.5rem;">üìù</span> What's on your mind? *
                    </label>
                    <div style="position: relative;">
                        <textarea
                            name="content"
                            id="contentInput"
                            required
                            maxlength="2000"
                            placeholder="Share your thoughts, start a discussion, ask questions..."
                            style="width: 100%; min-height: 120px; padding: 1.25rem; border: 3px solid #e2e8f0; border-radius: 16px; font-family: inherit; font-size: 1rem; resize: vertical; transition: all 0.3s ease; box-sizing: border-box; background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%); box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);"
                            onfocus="this.style.borderColor='#667eea'; this.style.boxShadow='0 0 0 4px rgba(102, 126, 234, 0.15), inset 0 2px 4px rgba(0,0,0,0.05)'; this.style.transform='scale(1.02)'"
                            onblur="this.style.borderColor='#e2e8f0'; this.style.boxShadow='inset 0 2px 4px rgba(0,0,0,0.05)'; this.style.transform='scale(1)'"
                            oninput="updateCounter(this); this.style.height='auto'; this.style.height=this.scrollHeight+'px'"
                        ><%= formData && formData.content ? formData.content : '' %></textarea>
                        <div id="charCounter" style="position: absolute; bottom: 0.75rem; right: 1rem; font-size: 0.75rem; color: #9ca3af; background: rgba(255,255,255,0.9); padding: 0.25rem 0.5rem; border-radius: 8px; font-weight: 600;">0 / 2000</div>
                    </div>
                </div>

                <!-- CRAZY CATEGORY SELECTION -->
                <div style="margin-bottom: 2rem;">
                    <label style="display: block; font-weight: 700; color: #2d3748; margin-bottom: 1rem; font-size: 1.1rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span style="font-size: 1.5rem;">üéØ</span> Choose Your Vibe
                    </label>
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem;">

                        <div class="category-card" data-category="lost-found" onclick="selectCategory(this, 'lost-found')"
                             style="background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%); border: 3px solid transparent; border-radius: 16px; padding: 1.25rem; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; transform: translateY(0);"
                             onmouseover="this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(252, 182, 159, 0.4)'"
                             onmouseout="if(!this.classList.contains('selected')) { this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none' }">
                            <input type="radio" name="category" value="lost-found" style="display: none;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <span style="font-size: 2rem;">üîç</span>
                                <div>
                                    <h4 style="margin: 0 0 0.25rem 0; font-weight: 700; color: #2d3748;">Lost & Found</h4>
                                    <p style="margin: 0; font-size: 0.875rem; color: #4a5568; opacity: 0.8;">Find your stuff!</p>
                                </div>
                            </div>
                        </div>

                        <div class="category-card" data-category="hostels" onclick="selectCategory(this, 'hostels')"
                             style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); border: 3px solid transparent; border-radius: 16px; padding: 1.25rem; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; transform: translateY(0);"
                             onmouseover="this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(168, 237, 234, 0.4)'"
                             onmouseout="if(!this.classList.contains('selected')) { this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none' }">
                            <input type="radio" name="category" value="hostels" style="display: none;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <span style="font-size: 2rem;">üè†</span>
                                <div>
                                    <h4 style="margin: 0 0 0.25rem 0; font-weight: 700; color: #2d3748;">Hostels</h4>
                                    <p style="margin: 0; font-size: 0.875rem; color: #4a5568; opacity: 0.8;">Dorm life vibes</p>
                                </div>
                            </div>
                        </div>

                        <div class="category-card" data-category="canteen" onclick="selectCategory(this, 'canteen')"
                             style="background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%); border: 3px solid transparent; border-radius: 16px; padding: 1.25rem; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; transform: translateY(0);"
                             onmouseover="this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(252, 182, 159, 0.4)'"
                             onmouseout="if(!this.classList.contains('selected')) { this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none' }">
                            <input type="radio" name="category" value="canteen" style="display: none;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <span style="font-size: 2rem;">üçï</span>
                                <div>
                                    <h4 style="margin: 0 0 0.25rem 0; font-weight: 700; color: #2d3748;">Canteen</h4>
                                    <p style="margin: 0; font-size: 0.875rem; color: #4a5568; opacity: 0.8;">Food talk!</p>
                                </div>
                            </div>
                        </div>

                        <div class="category-card" data-category="study" onclick="selectCategory(this, 'study')"
                             style="background: linear-gradient(135deg, #d299c2 0%, #fef9d7 100%); border: 3px solid transparent; border-radius: 16px; padding: 1.25rem; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; transform: translateY(0);"
                             onmouseover="this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(210, 153, 194, 0.4)'"
                             onmouseout="if(!this.classList.contains('selected')) { this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none' }">
                            <input type="radio" name="category" value="study" style="display: none;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <span style="font-size: 2rem;">üìö</span>
                                <div>
                                    <h4 style="margin: 0 0 0.25rem 0; font-weight: 700; color: #2d3748;">Study Groups</h4>
                                    <p style="margin: 0; font-size: 0.875rem; color: #4a5568; opacity: 0.8;">Learn together</p>
                                </div>
                            </div>
                        </div>

                        <div class="category-card" data-category="events" onclick="selectCategory(this, 'events')"
                             style="background: linear-gradient(135deg, #89f7fe 0%, #66a6ff 100%); border: 3px solid transparent; border-radius: 16px; padding: 1.25rem; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; transform: translateY(0);"
                             onmouseover="this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(137, 247, 254, 0.4)'"
                             onmouseout="if(!this.classList.contains('selected')) { this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none' }">
                            <input type="radio" name="category" value="events" style="display: none;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <span style="font-size: 2rem;">üéâ</span>
                                <div>
                                    <h4 style="margin: 0 0 0.25rem 0; font-weight: 700; color: #2d3748;">Events</h4>
                                    <p style="margin: 0; font-size: 0.875rem; color: #4a5568; opacity: 0.8;">Party time!</p>
                                </div>
                            </div>
                        </div>

                        <div class="category-card selected" data-category="general" onclick="selectCategory(this, 'general')"
                             style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border: 3px solid #4c1d95; border-radius: 16px; padding: 1.25rem; cursor: pointer; transition: all 0.3s ease; position: relative; overflow: hidden; transform: translateY(-5px) scale(1.05); box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4); color: white;"
                             onmouseover="this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(102, 126, 234, 0.6)'"
                             onmouseout="if(this.classList.contains('selected')) { this.style.transform='translateY(-5px) scale(1.05)'; this.style.boxShadow='0 15px 35px rgba(102, 126, 234, 0.4)' } else { this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none' }">
                            <input type="radio" name="category" value="general" checked style="display: none;">
                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                <span style="font-size: 2rem;">üí¨</span>
                                <div>
                                    <h4 style="margin: 0 0 0.25rem 0; font-weight: 700;">General</h4>
                                    <p style="margin: 0; font-size: 0.875rem; opacity: 0.9;">Anything goes!</p>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- üñºÔ∏è IMAGE UPLOAD SECTION ‚ö° -->
                <div style="margin-bottom: 2rem;">
                    <label style="display: block; font-weight: 700; color: #2d3748; margin-bottom: 1rem; font-size: 1.1rem; display: flex; align-items: center; gap: 0.5rem;">
                        <span style="font-size: 1.5rem;">üì∏</span> Add Photos (Optional)
                    </label>

                    <div style="border: 3px dashed #e2e8f0; border-radius: 16px; padding: 2rem; text-align: center; background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%); transition: all 0.3s ease; position: relative; cursor: pointer;"
                         id="imageDropZone"
                         ondragover="handleDragOver(event)"
                         ondragleave="handleDragLeave(event)"
                         ondrop="handleDrop(event)"
                         onclick="console.log('üî• ODIN: Drop zone clicked!'); document.getElementById('imageInput').click()">

                        <input type="file" id="imageInput" name="images" multiple accept="image/*"
                               style="display: none;" onchange="handleImageSelect(event)">

                        <div id="dropZoneContent">
                            <span style="font-size: 3rem; color: #9ca3af; margin-bottom: 1rem; display: block;">üì∑</span>
                            <h3 style="margin: 0 0 0.5rem 0; color: #4a5568; font-weight: 600;">Drop photos here or click to browse</h3>
                            <p style="margin: 0; color: #9ca3af; font-size: 0.875rem;">PNG, JPG up to 5MB each (max 5 photos)</p>
                        </div>

                        <div id="imagePreview" style="display: none; margin-top: 1rem;">
                            <h4 style="margin: 0 0 1rem 0; color: #4a5568;">Selected Images:</h4>
                            <div id="previewContainer" style="display: flex; flex-wrap: wrap; gap: 1rem; justify-content: center;"></div>
                        </div>
                    </div>
                </div>

                <!-- LOCATION & PRIORITY WITH STYLE -->
                <div style="margin-bottom: 2rem;">
                    <div style="display: grid; grid-template-columns: 2fr 1fr; gap: 1.5rem;">
                        <div>
                            <label style="display: block; font-weight: 600; color: #2d3748; margin-bottom: 0.75rem; font-size: 1rem; display: flex; align-items: center; gap: 0.5rem;">
                                <span style="font-size: 1.25rem;">üìç</span> Location (optional)
                            </label>
                            <input
                                type="text"
                                name="location"
                                placeholder="Where's the action? üìç"
                                maxlength="100"
                                style="width: 100%; padding: 1rem; border: 3px solid #e2e8f0; border-radius: 12px; font-family: inherit; transition: all 0.3s ease; box-sizing: border-box; background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%); font-size: 1rem;"
                                onfocus="this.style.borderColor='#667eea'; this.style.boxShadow='0 0 0 4px rgba(102, 126, 234, 0.15)'; this.style.transform='scale(1.02)'"
                                onblur="this.style.borderColor='#e2e8f0'; this.style.boxShadow='none'; this.style.transform='scale(1)'"
                            >
                        </div>
                        <div>
                            <label style="display: block; font-weight: 600; color: #2d3748; margin-bottom: 0.75rem; font-size: 1rem; display: flex; align-items: center; gap: 0.5rem;">
                                <span style="font-size: 1.25rem;">‚ö°</span> Priority
                            </label>
                            <select name="priority"
                                    style="width: 100%; padding: 1rem; border: 3px solid #e2e8f0; border-radius: 12px; font-family: inherit; background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%); font-size: 1rem; cursor: pointer; font-weight: 500;"
                                    onfocus="this.style.borderColor='#667eea'; this.style.boxShadow='0 0 0 4px rgba(102, 126, 234, 0.15)'"
                                    onblur="this.style.borderColor='#e2e8f0'; this.style.boxShadow='none'">
                                <option value="normal">üòå Chill</option>
                                <option value="high">üî• Important</option>
                                <option value="urgent">üö® URGENT</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- EPIC SUBMIT BUTTONS -->
                <div style="display: flex; gap: 1rem; margin-top: 2.5rem; padding-top: 2rem; border-top: 2px solid #f1f5f9;">
                    <a href="/posts" style="flex: 1; background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%); color: #64748b; border: none; padding: 1rem; border-radius: 12px; font-size: 1rem; font-weight: 600; cursor: pointer; transition: all 0.3s ease; text-decoration: none; text-align: center; display: flex; align-items: center; justify-content: center; gap: 0.5rem;"
                       onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 20px rgba(100, 116, 139, 0.2)'"
                       onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'">
                        <span>‚ùå</span> Cancel
                    </a>
                    <button type="submit" id="submitBtn" style="flex: 2; background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%); color: white; border: none; padding: 1rem; border-radius: 12px; font-size: 1rem; font-weight: 700; cursor: pointer; transition: all 0.3s ease; display: flex; align-items: center; justify-content: center; gap: 0.5rem; text-transform: uppercase; letter-spacing: 0.5px;"
                            onmouseover="this.style.transform='translateY(-3px) scale(1.02)'; this.style.boxShadow='0 15px 35px rgba(102, 126, 234, 0.4)'"
                            onmouseout="this.style.transform='translateY(0) scale(1)'; this.style.boxShadow='none'">
                        <span style="font-size: 1.25rem;">üöÄ</span> Create Epic Post
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // üî• ODIN'S ULTIMATE JAVASCRIPT POWER üî•
        let selectedCategory = 'general';
        let selectedImages = [];

        // üì∏ IMAGE UPLOAD HANDLING
        function handleDragOver(e) {
            e.preventDefault();
            const dropZone = document.getElementById('imageDropZone');
            dropZone.style.borderColor = '#667eea';
            dropZone.style.backgroundColor = 'rgba(102, 126, 234, 0.05)';
            dropZone.style.transform = 'scale(1.02)';
        }

        function handleDragLeave(e) {
            e.preventDefault();
            const dropZone = document.getElementById('imageDropZone');
            dropZone.style.borderColor = '#e2e8f0';
            dropZone.style.backgroundColor = '';
            dropZone.style.transform = 'scale(1)';
        }

        function handleDrop(e) {
            e.preventDefault();
            handleDragLeave(e);
            const files = Array.from(e.dataTransfer.files).filter(file => file.type.startsWith('image/'));
            handleFiles(files);
        }

        function handleImageSelect(e) {
            console.log('üì∏ ODIN ULTIMATE: Image input changed!');
            console.log('üì∏ ODIN ULTIMATE: Files selected:', e.target.files.length);
            const files = Array.from(e.target.files);
            files.forEach(file => console.log('üì∏ ODIN ULTIMATE: File:', file.name, file.size, file.type));
            handleFiles(files);
        }

        function handleFiles(files) {
            console.log('üì∏ ODIN ULTIMATE: Processing', files.length, 'files');
            console.log('üì∏ ODIN ULTIMATE: Current selected images:', selectedImages.length);

            // Limit to 5 images
            if (selectedImages.length + files.length > 5) {
                alert('üö® Maximum 5 images allowed!');
                console.log('‚ùå ODIN ULTIMATE: Too many images selected');
                return;
            }

            files.forEach(file => {
                console.log('üì∏ ODIN ULTIMATE: Processing file:', file.name, 'Size:', file.size);

                if (file.size > 5 * 1024 * 1024) {
                    alert(`üö® ${file.name} is too large! Maximum 5MB per image.`);
                    console.log('‚ùå ODIN ULTIMATE: File too large:', file.name);
                    return;
                }

                selectedImages.push(file);
                console.log('‚úÖ ODIN ULTIMATE: File added to selection:', file.name);

                // Create preview
                const reader = new FileReader();
                reader.onload = function(e) {
                    console.log('üñºÔ∏è ODIN ULTIMATE: File read successfully:', file.name);
                    addImagePreview(file, e.target.result);
                };
                reader.readAsDataURL(file);
            });

            updateImageInput();
            console.log('üì∏ ODIN ULTIMATE: Total selected images now:', selectedImages.length);
        }

        function addImagePreview(file, src) {
            const previewDiv = document.getElementById('imagePreview');
            const container = document.getElementById('previewContainer');

            const imageDiv = document.createElement('div');
            imageDiv.style.cssText = 'position: relative; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.15);';

            imageDiv.innerHTML = `
                <img src="${src}" alt="${file.name}"
                     style="width: 120px; height: 120px; object-fit: cover; display: block;">
                <div style="position: absolute; top: 5px; right: 5px; background: rgba(255,255,255,0.9); border-radius: 50%; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; cursor: pointer; font-weight: bold; color: #dc2626;"
                     onclick="removeImage('${file.name}', this.parentElement)">√ó</div>
                <div style="position: absolute; bottom: 0; left: 0; right: 0; background: linear-gradient(transparent, rgba(0,0,0,0.7)); color: white; padding: 0.5rem; font-size: 0.75rem; text-align: center;">
                    ${file.name.length > 15 ? file.name.substring(0, 15) + '...' : file.name}
                </div>
            `;

            container.appendChild(imageDiv);
            previewDiv.style.display = 'block';
        }

        function removeImage(fileName, element) {
            selectedImages = selectedImages.filter(file => file.name !== fileName);
            element.remove();

            if (selectedImages.length === 0) {
                document.getElementById('imagePreview').style.display = 'none';
            }

            updateImageInput();
        }

        function updateImageInput() {
            const input = document.getElementById('imageInput');
            const dt = new DataTransfer();
            selectedImages.forEach(file => dt.items.add(file));
            input.files = dt.files;
        }

        // CHARACTER COUNTER WITH STYLE
        function updateCounter(textarea) {
            const counter = document.getElementById('charCounter');
            const length = textarea.value.length;
            counter.textContent = length + ' / 2000';

            if (length > 1800) {
                counter.style.color = '#dc2626';
                counter.style.background = 'rgba(239, 68, 68, 0.1)';
            } else if (length > 1500) {
                counter.style.color = '#d97706';
                counter.style.background = 'rgba(217, 119, 6, 0.1)';
            } else {
                counter.style.color = '#059669';
                counter.style.background = 'rgba(255,255,255,0.9)';
            }
        }

        // EPIC CATEGORY SELECTION WITH ANIMATIONS
        function selectCategory(element, value) {
            console.log('üî• ODIN ULTIMATE: Selecting category:', value);
            console.log('üìç ODIN ULTIMATE: Element clicked:', element);
            console.log('üéØ ODIN ULTIMATE: Element classes:', element.className);

            // Reset all categories
            const allCards = document.querySelectorAll('.category-card');
            console.log('üîç ODIN ULTIMATE: Found', allCards.length, 'category cards');

            allCards.forEach(card => {
                card.classList.remove('selected');
                card.style.transform = 'translateY(0) scale(1)';
                card.style.boxShadow = 'none';
                card.style.border = '3px solid transparent';
                card.style.color = '#2d3748';

                const input = card.querySelector('input');
                if (input) input.checked = false;
            });

            // Select this category with EPIC animation
            element.classList.add('selected');
            element.style.transform = 'translateY(-5px) scale(1.05)';
            element.style.border = '3px solid #4c1d95';
            element.style.color = 'white';

            // Set gradient based on category
            if (value === 'lost-found') {
                element.style.background = 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)';
                element.style.boxShadow = '0 15px 35px rgba(255, 107, 107, 0.4)';
            } else if (value === 'hostels') {
                element.style.background = 'linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)';
                element.style.boxShadow = '0 15px 35px rgba(116, 185, 255, 0.4)';
            } else if (value === 'canteen') {
                element.style.background = 'linear-gradient(135deg, #fd79a8 0%, #e84393 100%)';
                element.style.boxShadow = '0 15px 35px rgba(253, 121, 168, 0.4)';
            } else if (value === 'study') {
                element.style.background = 'linear-gradient(135deg, #00b894 0%, #00a085 100%)';
                element.style.boxShadow = '0 15px 35px rgba(0, 184, 148, 0.4)';
            } else if (value === 'events') {
                element.style.background = 'linear-gradient(135deg, #fdcb6e 0%, #e17055 100%)';
                element.style.boxShadow = '0 15px 35px rgba(253, 203, 110, 0.4)';
            } else {
                element.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
                element.style.boxShadow = '0 15px 35px rgba(102, 126, 234, 0.4)';
            }

            const input = element.querySelector('input');
            if (input) {
                input.checked = true;
                selectedCategory = value;
                console.log('‚úÖ ODIN ULTIMATE: Category locked and loaded:', value);
                console.log('üéØ ODIN ULTIMATE: Input checked:', input.checked);

                // Visual feedback for selection
                element.style.animation = 'pulse 0.6s ease-in-out';
                setTimeout(() => {
                    element.style.animation = '';
                }, 600);
            } else {
                console.error('‚ùå ODIN ULTIMATE: No input found in category card!');
                console.log('üîç ODIN ULTIMATE: Element innerHTML:', element.innerHTML);
            }
        }

        // EPIC FORM SUBMISSION
        function handleSubmit(event) {
            console.log('üöÄ ODIN ULTIMATE: Epic form launching...');

            const content = document.getElementById('contentInput').value.trim();
            if (!content) {
                alert('ü§® Hey! Write something epic first!');
                event.preventDefault();
                return false;
            }

            // Double-check category selection
            const categoryInput = document.querySelector('input[name="category"]:checked');
            console.log('üéØ ODIN ULTIMATE: Final category check:', categoryInput ? categoryInput.value : 'NONE');

            if (!categoryInput) {
                console.log('‚ö†Ô∏è ODIN ULTIMATE: No category, forcing general');
                document.querySelector('input[value="general"]').checked = true;
            }

            const submitBtn = document.getElementById('submitBtn');
            submitBtn.innerHTML = '<span style="font-size: 1.25rem;">‚è≥</span> Creating Magic...';
            submitBtn.disabled = true;
            submitBtn.style.background = 'linear-gradient(135deg, #9ca3af 0%, #6b7280 100%)';

            console.log('üèÜ ODIN ULTIMATE: VICTORY ACHIEVED!');
            return true;
        }

        // FLOATING ANIMATION
        const style = document.createElement('style');
        style.textContent = `
            @keyframes float {
                0%, 100% { transform: rotate(0deg) translateX(0px) rotate(0deg); }
                50% { transform: rotate(180deg) translateX(10px) rotate(-180deg); }
            }

            @keyframes pulse {
                0% { transform: translateY(-5px) scale(1.05); }
                50% { transform: translateY(-8px) scale(1.08); }
                100% { transform: translateY(-5px) scale(1.05); }
            }

            .category-card {
                user-select: none;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                pointer-events: auto !important;
                z-index: 10;
            }

            .category-card:active {
                transform: translateY(-3px) scale(1.03) !important;
            }
        `;
        document.head.appendChild(style);

        // INITIALIZE EVERYTHING
        updateCounter(document.getElementById('contentInput'));
        console.log('‚ö° ODIN ULTIMATE: All systems online and ready for epic posting!');

        // PRE-FILL FROM URL
        const urlParams = new URLSearchParams(window.location.search);
        const categoryParam = urlParams.get('category');
        if (categoryParam) {
            const categoryCard = document.querySelector(`[data-category="${categoryParam}"]`);
            if (categoryCard) {
                selectCategory(categoryCard, categoryParam);
            }
        }
    </script>

    <%- include('../partials/footer') %>
</body>
</html>
