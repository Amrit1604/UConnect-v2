<%- include('../partials/navbar') %>

<div class="single-post-container">
    <div class="single-post-wrapper">
        <div class="post-card">
            <div class="post-header">
                <div class="post-author">
                    <div class="author-avatar">
                        <img src="<%= post.author.avatarUrl %>" alt="<%= post.author.username %>">
                    </div>
                    <div class="author-info">
                        <a href="/users/<%= post.author.username ? post.author.username : post.author._id %>" class="author-name">
                            <%= post.author.username %>
                        </a>
                        <span class="post-time"><%= new Date(post.createdAt).toLocaleDateString() %></span>
                    </div>
                </div>
                <div class="post-options">
                    <button class="options-btn">‚ãÆ</button>
                </div>
            </div>

            <div class="post-content">
                <p><%= post.content %></p>
                <% if (post.tags && post.tags.length > 0) { %>
                    <div class="post-tags">
                        <% post.tags.forEach(tag => { %>
                            <span class="tag">#<%= tag %></span>
                        <% }); %>
                    </div>
                <% } %>
            </div>

            <div class="post-stats">
                <span class="likes-count"><%= post.likesCount || 0 %> likes</span>
                <span class="comments-count"><%= post.commentsCount || 0 %> comments</span>
            </div>

            <div class="post-actions">
                <button class="action-btn like-btn" data-post-id="<%= post._id %>">
                    <span>ü§ç</span>
                    Like
                </button>
                <button class="action-btn comment-btn">
                    <span>üí¨</span>
                    Comment
                </button>
                <button class="action-btn share-btn">
                    <span>‚ÜóÔ∏è</span>
                    Share
                </button>
            </div>

            <!-- Comments Section -->
            <div class="comments-section">
                <div class="comments-list">
                    <% if (post.comments && post.comments.length > 0) { %>
                        <% post.comments.forEach(comment => { %>
                            <div class="comment">
                                <div class="comment-avatar">
                                    <img src="<%= comment.author.avatarUrl %>" alt="<%= comment.author.username %>">
                                </div>
                                <div class="comment-content">
                                    <span class="comment-author username-hover"
                                          data-user-id="<%= comment.author._id %>"
                                          data-username="<%= comment.author.username %>"
                                          data-post-id="<%= post._id %>">
                                        <%= comment.author.username %>
                                        <% if (comment.author._id.toString() !== user._id.toString()) { %>
                                            <span class="secret-chat-icon" title="Send secret message">üîê</span>
                                        <% } %>
                                    </span>
                                    <span class="comment-text"><%= comment.content %></span>
                                    <span class="comment-time"><%= new Date(comment.createdAt).toLocaleDateString() %></span>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <p class="no-comments">No comments yet. Be the first to comment!</p>
                    <% } %>
                </div>

                <form class="comment-form" action="/posts/<%= post._id %>/comment" method="POST">
                    <div class="comment-input-wrapper">
                        <img src="<%= user.avatarUrl %>" alt="<%= user.username %>" class="comment-avatar">
                        <input type="text" name="content" placeholder="Add a comment..." class="comment-input" required>
                        <button type="submit" class="comment-submit">Post</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
.single-post-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
}

.single-post-wrapper {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    overflow: hidden;
}

.post-card {
    padding: 20px;
}

.post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
}

.post-author {
    display: flex;
    align-items: center;
    gap: 12px;
}

.author-avatar img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
}

.author-info {
    display: flex;
    flex-direction: column;
}

.author-name {
    font-weight: 600;
    color: #333;
    text-decoration: none;
}

.post-time {
    font-size: 12px;
    color: #8e8e8e;
}

.post-content {
    margin-bottom: 15px;
}

.post-content p {
    margin: 0 0 10px 0;
    line-height: 1.5;
}

.post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 10px;
}

.tag {
    background: #e3f2fd;
    color: #1976d2;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
}

.post-stats {
    display: flex;
    gap: 20px;
    margin-bottom: 15px;
    font-size: 14px;
    color: #8e8e8e;
}

.post-actions {
    display: flex;
    gap: 20px;
    padding: 15px 0;
    border-top: 1px solid #efefef;
    border-bottom: 1px solid #efefef;
}

.action-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 14px;
    color: #8e8e8e;
    transition: color 0.2s;
}

.action-btn:hover {
    color: #333;
}

.action-btn span {
    font-size: 20px;
}

.comments-section {
    margin-top: 20px;
}

.comment {
    display: flex;
    gap: 12px;
    margin-bottom: 15px;
}

.comment-avatar img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
}

.comment-content {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.comment-author {
    font-weight: 600;
    color: #333;
    font-size: 14px;
}

.comment-text {
    font-size: 14px;
    color: #333;
}

.comment-time {
    font-size: 12px;
    color: #8e8e8e;
}

.comment-form {
    margin-top: 20px;
}

.comment-input-wrapper {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 10px;
    border: 1px solid #efefef;
    border-radius: 24px;
}

.comment-input-wrapper img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    object-fit: cover;
}

.comment-input {
    flex: 1;
    border: none;
    outline: none;
    font-size: 14px;
}

.comment-submit {
    background: #1976d2;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 16px;
    cursor: pointer;
    font-size: 14px;
}

.no-comments {
    text-align: center;
    color: #8e8e8e;
    font-style: italic;
    margin: 20px 0;
}

/* üî• SNEAKY SECRET CHAT STYLES üî• */
.username-hover {
    transition: all 0.3s ease;
    border-radius: 4px;
    padding: 2px 4px;
    position: relative;
    display: inline-block;
    cursor: pointer;
}

.username-hover:hover {
    background: linear-gradient(135deg, #667eea20 0%, #764ba220 100%);
    transform: scale(1.02);
}

.secret-chat-icon {
    opacity: 0;
    font-size: 10px;
    margin-left: 4px;
    transition: all 0.3s ease;
    cursor: pointer;
    position: absolute;
    top: -2px;
    right: -15px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 50%;
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    transform: scale(0);
}

.username-hover:hover .secret-chat-icon {
    opacity: 1;
    transform: scale(1);
}

.secret-chat-icon:hover {
    transform: scale(1.2) !important;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.4);
}

.comment {
    border-radius: 8px;
    padding: 8px;
    transition: all 0.3s ease;
}

.comment:hover {
    background: rgba(102, 126, 234, 0.05);
}

/* Chat Request Modal */
.chat-request-modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    backdrop-filter: blur(5px);
}

.chat-request-content {
    background-color: white;
    margin: 10% auto;
    padding: 2rem;
    border-radius: 16px;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    position: relative;
    animation: modalSlideIn 0.3s ease;
}

.modal-header {
    text-align: center;
    margin-bottom: 1.5rem;
}

.modal-header h3 {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
}

.modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #64748b;
}

.modal-close:hover {
    color: #ef4444;
}

.user-card {
    display: flex;
    align-items: center;
    gap: 1rem;
    background: #f8fafc;
    padding: 1rem;
    border-radius: 12px;
    margin-bottom: 1rem;
}

.user-card img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid #667eea;
}

.user-card h4 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #1e293b;
}

.user-card p {
    margin: 0;
    color: #64748b;
    font-size: 0.9rem;
}

.message-input {
    width: 100%;
    padding: 0.75rem;
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    font-family: inherit;
    margin-bottom: 1rem;
    resize: vertical;
    min-height: 80px;
    transition: border-color 0.3s ease;
    box-sizing: border-box;
}

.message-input:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.15);
}

.modal-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
}

.btn-modal {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-cancel {
    background: #f1f5f9;
    color: #475569;
}

.btn-cancel:hover {
    background: #e2e8f0;
}

.btn-send {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
}

.btn-send:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
}

.btn-send:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
}

@keyframes modalSlideIn {
    from {
        opacity: 0;
        transform: translateY(-50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
</style>

<!-- Secret Chat Request Modal -->
<div id="chatRequestModal" class="chat-request-modal">
    <div class="chat-request-content">
        <button class="modal-close" onclick="closeChatRequest()">&times;</button>

        <div class="modal-header">
            <h3>üîê Request Secret Chat</h3>
        </div>

        <div id="modalUserCard" class="user-card">
            <!-- User info will be populated by JavaScript -->
        </div>

        <form id="chatRequestForm">
            <label for="chatMessage" style="display: block; margin-bottom: 0.5rem; font-weight: 600; color: #374151;">
                Your message:
            </label>
            <textarea
                id="chatMessage"
                class="message-input"
                placeholder="Hi! I'd like to have a private chat with you about this post. What do you think?"
                maxlength="200"
                required></textarea>

            <div class="modal-actions">
                <button type="button" class="btn-modal btn-cancel" onclick="closeChatRequest()">
                    Cancel
                </button>
                <button type="submit" class="btn-modal btn-send" id="sendRequestBtn">
                    üöÄ Send Request
                </button>
            </div>
        </form>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    // üî• SNEAKY SECRET CHAT SYSTEM üî•
    const socket = io();
    let currentChatRequest = {
        userId: null,
        username: null,
        postId: null
    };

    // Handle username hover clicks for secret chat
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('secret-chat-icon')) {
            const usernameElement = e.target.parentElement;
            const userId = usernameElement.getAttribute('data-user-id');
            const username = usernameElement.getAttribute('data-username');
            const postId = usernameElement.getAttribute('data-post-id');

            openChatRequest(userId, username, postId);
        }
    });

    function openChatRequest(userId, username, postId) {
        currentChatRequest = { userId, username, postId };

        // Populate user card
        document.getElementById('modalUserCard').innerHTML = `
            <img src="/uploads/avatars/default-avatar.png" alt="${username}" onerror="this.src='/images/logo.png'">
            <div>
                <h4>${username}</h4>
                <p>Request a private chat to connect securely</p>
            </div>
        `;

        // Show modal
        document.getElementById('chatRequestModal').style.display = 'block';
        document.getElementById('chatMessage').focus();
    }

    function closeChatRequest() {
        document.getElementById('chatRequestModal').style.display = 'none';
        document.getElementById('chatMessage').value = '';
        currentChatRequest = { userId: null, username: null, postId: null };
    }

    // Handle form submission
    document.getElementById('chatRequestForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const message = document.getElementById('chatMessage').value.trim();
        if (!message) return;

        const sendBtn = document.getElementById('sendRequestBtn');
        sendBtn.disabled = true;
        sendBtn.innerHTML = '‚è≥ Sending...';

        try {
            const response = await fetch('/chat/request', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    recipientId: currentChatRequest.userId,
                    postId: currentChatRequest.postId,
                    message: message
                })
            });

            console.log('üî• CHAT REQUEST RESPONSE STATUS:', response.status);

            if (!response.ok) {
                const errorText = await response.text();
                console.error('‚ùå HTTP Error:', response.status, errorText);
                throw new Error(`HTTP ${response.status}: ${errorText}`);
            }

            const result = await response.json();

            console.log('üî• CHAT REQUEST RESPONSE:', result);

            if (result.success) {
                alert('üéâ Secret chat request sent successfully! ' + currentChatRequest.username + ' will be notified.');
                closeChatRequest();
            } else {
                console.error('‚ùå Chat request failed:', result);
                alert('‚ùå Error: ' + (result.message || 'Unknown error'));
            }
        } catch (error) {
            console.error('Error sending chat request:', error);
            alert('‚ùå Something went wrong. Please try again.');
        } finally {
            sendBtn.disabled = false;
            sendBtn.innerHTML = 'üöÄ Send Request';
        }
    });

    // Close modal when clicking outside
    window.onclick = function(event) {
        const modal = document.getElementById('chatRequestModal');
        if (event.target === modal) {
            closeChatRequest();
        }
    }

    // Listen for new chat requests
    socket.on('newChatRequest', function(data) {
        if (data.recipientId === '<%= user._id %>') {
            showNotification('üí¨ New secret chat request from ' + data.requesterName);
        }
    });

    function showNotification(message) {
        if (Notification.permission === 'granted') {
            new Notification('UConnect Secret Chat', {
                body: message,
                icon: '/images/logo.png'
            });
        } else {
            setTimeout(() => alert(message), 1000);
        }
    }

    // Request notification permission
    if (Notification.permission === 'default') {
        Notification.requestPermission();
    }

    console.log('üî• SNEAKY CHAT: Secret messaging system loaded on single post!');
</script>

<%- include('../partials/footer') %>
